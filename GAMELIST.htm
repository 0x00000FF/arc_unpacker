<!DOCTYPE html>
<!-- vim: set sts=2 ts=2 sw=2 cc=200: -->
<html>
<head>
<meta charset="utf-8"/>
<title>arc_unpacker - supported game list</title>
  <style type="text/css">
    body { font-size: 10.5pt; font-family: sans-serif; text-align: center; color: #333; overflow-y: scroll; }
    #main { margin: 0 auto; display: inline-block; text-align: left; max-width: 60em; }
    h1 { font-size: 18pt; font-weight: normal; text-align: center; margin-bottom: 2em; }
    a[href] { text-decoration: none; color: dodgerblue; }
    a:not([href]) { text-decoration: line-through; }
    a:hover, a:active, a:focus { color: #f60; }
    p { margin: 0.5em 0; }
    *:first-child { margin-top: 0; }
    #game-list { list-style-type: none; margin: 1em 0; padding: 0; }
    #game-list>li { padding: 0.8em; background: #f9f9f9; margin: 1em 0; }
    #game-list>li:hover { background: #f0f0f0; }
    .title-english { font-size: 120%; padding-bottom: 0.2em; }
    .title-original { color: #555; padding-bottom: 0.8em; }
    .release { float: left; color: #888; font-size: 90%; }
    .misc-area { float: right; color: #888; font-size: 90%; list-style-type: none; display: block; margin: 0; padding: 0; }
    .misc-area li { display: inline-block; margin: 0 0 0 3em !important; }
    .details-area { padding: 0.5em; background: #fff; margin: 0.5em 0 0 0; }
    .clear { clear: both; }
    .formats p { margin: 0; padding: 0; display: inline-block; width: 6em; }
    .formats p::after { content: ': '; }
    .formats li ul { margin: 0; padding: 0; display: inline !important; }
    .formats li li { margin: 0; padding: 0; display: inline; }
    .formats li li:not(:last-child)::after { content: ', '; }
    form { text-align: center; margin: 2em 0 !important; }
    input { margin: 0 auto; font-size: 120%; padding: 0.21em 0.4em; width: 20em; border: 1px solid dimgray; background: white; }
    input:focus { border: 2px solid #f80; margin: -1px; }
  </style>
</head>
<body>
<div id="main">
  <script src="GAMELIST.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  <header>
    <h1>
      <code><a href="https://github.com/vn-tools/arc_unpacker" title="arc_unpacker">arc_unpacker</a></code> - supported game list
    </h1>
  </header>

  <section>
    <p>If a game isn't listed below and it works, please let me know so I can update the table. Contact information can be found in the
    <a href="https://github.com/vn-tools/arc_unpacker">README</a>.</p>
  </section>

  <section>
    <form id="live-search">
      <input placeholder="Enter text for live search&hellip;"/>
    </form>
  </section>

  <section>
    <ul id="game-list"></ul>
  </section>
</div>

<script>
  function getSearchText(game) {
    var text = '';
    if (game.dev) {
      text += '[' + game.dev + ']';
    }
    if (game.date) {
      text += '[' + game.date + ']';
    }
    text += game.title;
    if (game.title_orig) {
      text += '(' + game.title_orig + ')';
    }
    return text.toLowerCase();
  }

  function toggleDetails($gameNode, delay) {
    var $detailsArea = $gameNode.find('.details-area');
    var $detailsLink = $gameNode.find('.details');
    var visible = !$detailsArea.is(':visible');
    $detailsLink.fadeOut(delay / 2, function() {
      $detailsLink.text(visible
        ? 'Hide details'
        : 'Show details').fadeIn(delay / 2);
    });
    $detailsArea.slideToggle(delay);
  }

  games = games.sort(function (a, b) {
    return a.title.localeCompare(b.title, ['en', 'jp'], {numeric: true});
  });

  var $ul = $('#game-list');
  $.each(games, function(i, game) {
    var complex = false;
    $cliInvocationList = $('<ul/>');
    $.each(
      game.args,
      function(i, parameters) {
        $cliInvocationList.append($('<li>').append($('<code>').text(parameters)));
        if (parameters.indexOf(' ') !== -1) {
          complex = true;
        }
      });

    var $detailsArea = $('<div class="details-area"/>').hide();

    if (game.hasOwnProperty('fmt')) {
      $formatsList = $('<ul/>').attr('class', 'formats');
      $.each(
        game.fmt,
        function(resourceType, formatList) {
          $resourceFormatList = $('<ul/>').attr('class', 'format');
          $.each(formatList, function(i, format) {
            $resourceFormatList.append($('<li/>').text(format));
          });
          $formatsList.append($('<li/>').append($('<p/>').text(resourceType)).append($resourceFormatList));
        });
      $detailsArea.append($('<p/>').text('Formats'));
      $detailsArea.append($formatsList);
    }

    $detailsArea.append($('<p/>').text('CLI invocation'));
    $detailsArea.append($cliInvocationList);
    if (game.hasOwnProperty('info')) {
      $detailsArea.append($('<p/>').text('Additional information'));
      $detailsArea.append($('<p/>').html(game.info));
    }

    var $gameNode = $('<li class="game"/>');

    var $titleEnglish = $('<div class="title-english"/>');
    $titleEnglish.text(game.title);
    $gameNode.append($titleEnglish);

    if (game.hasOwnProperty('title_orig')) {
      var $titleOriginal = $('<div class="title-original"/>');
      $titleOriginal.text(game.title_orig);
      $gameNode.append($titleOriginal);
    }

    if (game.hasOwnProperty('dev')) {
      var $releaseInfo = $('<div class="release"/>');
      $releaseInfo.text(game.dev.constructor === Array ? game.dev.join(' & ') : game.dev);
      if (game.hasOwnProperty('date')) {
        $releaseInfo.append(' (' + (game.date.constructor === Array ? game.date.join(', ') : game.date) + ')');
      }
      $gameNode.append($releaseInfo);
    }

    var $miscArea = $('<ul class="misc-area"/>');

    var $detailsLink = $('<a class="details" href="#" title="Show details">Show details</a>');
    $detailsLink.click(function(e) {
      e.preventDefault();
      toggleDetails($gameNode, 250);
    });
    $miscArea.append($('<li/>').append($detailsLink));

    var $vndbLink = $('<a class="vndb" title="VNDB"/>').text('VNDB');
    if (game.hasOwnProperty('vndb')) {
      if (game.vndb.constructor === Array) {
        $vndbLink.attr('href', 'https://vndb.org/v/all?q=' + encodeURIComponent(game.title) + '&fil=&rfil=');
      } else {
        $vndbLink.attr('href', 'https://vndb.org/v' + game.vndb);
      }
    }
    $miscArea.append($('<li/>').append($vndbLink));

    if (complex) {
      $miscArea.prepend($('<li><span>Requires extra CLI switches</span></li>'));
    }

    $gameNode.append($miscArea);
    $gameNode.append($('<div class="clear"/>'));
    $gameNode.append($detailsArea);

    $ul.append($gameNode);
  });

  var filterResults = (function() {
    var listSearchText = {};
    $.each(games, function(i, game) {
      listSearchText[i] = getSearchText(game);
    });
    var $listElements = $ul.children();
    var listSize = $listElements.length;
    return function(text) {
      text = text.toLowerCase();
      if (text === '') {
        $ul.find('li').show();
        return;
      }
      for (var i = 0; i < listSize; i++) {
        $listElements[i].style.display = listSearchText[i].indexOf(text) !== -1 ? 'block' : 'none';
      }
    }
  })();

  var $input = $('#live-search input');
  var keyTimeout, lastFilter;
  $input.change(function() {
    filterResults($input.val());
  }).keydown(function() {
    clearTimeout(keyTimeout);
    keyTimeout = setTimeout(function() {
      if ($input.val() === lastFilter) {
        return;
      }
      lastFilter = $input.val();
      filterResults($input.val());
    }, 50);
  });
  $('form').submit(function(e) {
    e.preventDefault();
    window.location.hash = encodeURIComponent($input.val());
  });

  $(function() {
    if (window.location.hash) {
      var hash = window.location.hash.replace(/^#/, '');
      $input.val(decodeURIComponent(hash));
    }
    filterResults($input.val());
    $ul.width($ul.width());
    if (window.location.hash) {
      $visibleGameNodes = $ul.find('li.game:visible');
      if ($visibleGameNodes.length <= 5) {
        $visibleGameNodes.each(function(i, gameNode) {
          toggleDetails($(gameNode), 0);
        });
      }
    }
  });
</script>
</body>
</html>
