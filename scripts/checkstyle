#!/bin/bash
shopt -s globstar

echo 'Checking for whitespace errors...'
grep '\s$' **/*.{cc,h}
pcregrep -M '\n\n\Z' **/*.{cc,h}

echo 'Checking for too long lines...'
grep '^.\{81,\}$' **/*.{cc,h}

echo 'Checking for lowercase hex literals...'
grep '[0\\]x[0-9]*[a-f][0-9]*' **/*.{cc,h}

echo 'Checking for typedef...'
grep 'typedef' **/*.{cc,h}

echo 'Checking for "length"...'
grep 'length' **/*.{cc,h} | grep -v run_length && echo 'Use "size" instead.'

echo 'Checking for iostream outside logger...'
grep 'iostream' **/*.{cc,h} | grep -v logger

echo 'Checking for whitespace around braces...'
grep '[({] [0-9"]\|[0-9"] [})]\|[]=] *{  *}' **/*.{cc,h}

echo 'Checking for sloppy exceptions...'
grep 'throw std' **/*.cc | grep -v logic_error

echo 'Checking for nonfinal struct/classes...'
grep 'struct \|class ' **/*.{cc,h} \
    | grep -v '_struct' \
    | grep -v 'pngstruct' \
    | grep -v 'enum class' \
    | grep -v '\(class\|struct\) I[A-Z]' \
    | grep -v ';$' \
    | grep -v 'file_saver.*class FileSaver' \
    | grep -v 'io.*class IO' \
    | grep -v 'err.*struct .*Error' \
    | grep -v 'arg_parser.*Option' \
    | grep -v 'bit_reader.*class Reader' \
    | grep -v 'class \(Archive\|File\|Image\)Decoder' \
    | grep -v 'struct Archive\(Entry\|Meta\)$' \
    | grep -v 'fmt/entis.*class \(AudioDecoderImpl\|Decoder\)' \
    | grep -v 'fmt/glib.*class Plugin' \
    | grep -v ' final'

echo 'Checking for nonstatic constructs...'
grep '^[A-Z0-9a-z:<>_]\{1,\} [^:]*[(;]' **/*.cc \
    | grep -v 'using namespace' \
    | grep -v 'int main' \
    | grep -v 'compat/' \
    | grep -v static

echo 'Checking for .cc #including their .h not in the top entry...'
for path in **/*.cc; do
    name="${path/*\//}"
    header="${name/.cc/.h}"
    grep '#include' "$path" \
        | grep -n -m 1 "$header" \
        | grep -v '1:' >/dev/null \
        && echo "$path"
done

echo 'Checking for Log.debug()...'
grep 'Log\.debug(' **/*.cc && echo "Don't use Log.debug() in production code."

echo 'Checking for comments without spaces...'
grep '//[^ ]' **/*.{cc,h} | grep -v '//$' | grep -v 'https\?://'

exit 0
